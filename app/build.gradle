apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'


android {
    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.mycampusapp"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        multiDexEnabled true
        versionCode 11
        versionName "11.0"
        testInstrumentationRunner "com.mycampusapp.CustomTestRunner"

        vectorDrawables.useSupportLibrary = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        noStdlib = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        dataBinding true
        viewBinding true
    }

    // Always show the result of every unit assessment when running via command line, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
    packagingOptions {
        exclude "**/attach_hotspot_windows.dll"
        exclude "META-INF/licenses/**"
        exclude "META-INF/AL2.0"
        exclude "META-INF/LGPL2.1"
    }
    configurations.all {
        resolutionStrategy {
            exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
        }
    }
}


dependencies {

    // App dependencies
    implementation "androidx.appcompat:appcompat:1.3.1"
    implementation "androidx.cardview:cardview:$cardVersion"
    implementation "com.google.android.material:material:1.5.0-alpha03"
    api "com.google.android.material:material:1.5.0-alpha03"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "androidx.annotation:annotation:$androidXAnnotations"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0"
    implementation "com.jakewharton.timber:timber:$timberVersion"
    implementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'

    // Architecture Components
    implementation "androidx.lifecycle:lifecycle-extensions:$archLifecycleVersion"
    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:2.3.1"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.3.1"
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.5"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.5"

    //cameraX dependencies
    def camerax_version = "1.0.1"
// CameraX core library using camera2 implementation
    implementation "androidx.camera:camera-camera2:$camerax_version"
// CameraX Lifecycle Library
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
// CameraX View class
    implementation "androidx.camera:camera-view:1.0.0-alpha27"

    // Dependencies for local unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"

    // Dependencies for Android instrumented unit tests
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.5.30"
    implementation "androidx.fragment:fragment-ktx:1.3.6"

    //hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    //hilt with workmanager
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt 'androidx.hilt:hilt-compiler:1.0.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    //recycler view selection dependency
    implementation 'androidx.recyclerview:recyclerview-selection:1.1.0'

    //firebase bom
    implementation platform('com.google.firebase:firebase-bom:28.1.0')

    //firestore dependency
    implementation 'com.google.firebase:firebase-firestore-ktx'

    //firebase authentication dependency
    implementation 'com.google.firebase:firebase-auth'

    //firebase cloud messaging dependencies. Crashlytics are essential
    implementation 'com.google.firebase:firebase-messaging-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //firebase cloud functions dependency
    implementation 'com.google.firebase:firebase-functions'
    //firebase cloud storage dependency
    implementation 'com.google.firebase:firebase-storage-ktx'
    
    //settings dependency
    implementation 'androidx.preference:preference-ktx:1.1.1'

    // Kotlin + coroutines work manager dependency
    implementation "androidx.work:work-runtime-ktx:2.7.0-beta01"

    //Glide dependency
    implementation 'com.github.bumptech.glide:glide:4.12.0'
}
